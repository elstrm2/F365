from aiogram import Dispatcher
from .profile import *
from .subscription import *
from .support import *
from .promocodes import *
from .directions import *


def register_handlers_profile(dp: Dispatcher):
    # --- –ö–æ–º–∞–Ω–¥–∞ "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å" ---
    dp.register_message_handler(
        profile,
        lambda message: message.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ ---
    dp.register_callback_query_handler(
        show_subscription_menu,
        lambda call: call.data == "profile_subscription",
        state="*",
    )
    dp.register_callback_query_handler(
        show_subscription_plans,
        lambda call: call.data == "buy_subscription",
    )
    dp.register_callback_query_handler(
        select_subscription_plan,
        lambda call: call.data.startswith("select_subscription_plan_"),
        state=SelectSubscriptionStateByUser.waiting_for_plan,
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ---
    dp.register_callback_query_handler(
        user_support, lambda call: call.data == "profile_support"
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ ---
    dp.register_callback_query_handler(
        enter_promo_code_start, lambda call: call.data == "profile_promo_codes"
    )
    dp.register_message_handler(
        enter_promo_code, state=EnterPromoCodeState.waiting_for_code
    )
    dp.register_callback_query_handler(
        confirm_promo_code, state=EnterPromoCodeState.waiting_for_confirmation
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π ---
    dp.register_callback_query_handler(
        paginate_directions,
        lambda call: call.data.startswith("profile_directions_page"),
    )
    dp.register_callback_query_handler(
        add_direction_start,
        lambda call: call.data.startswith("profile_add_direction_page"),
        state="*",  # –∏–Ω–∞—á–µ –ø–∞–≥–∏–Ω–∞—Ü–∏—è —Å–ª–æ–º–∞–µ—Ç—Å—è
    )
    dp.register_callback_query_handler(
        select_direction,
        lambda call: call.data.startswith("profile_add_direction_")
        and not call.data.startswith("profile_add_direction_page"),
        state=AddUserDirectionState.choosing_direction,
    )

    # –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
    dp.register_callback_query_handler(
        paginate_keywords,
        lambda call: call.data.startswith("profile_keywords_page")
        and not call.data.startswith("profile_keywords_page_confirm")
        and not call.data.endswith("select_all")
        and not call.data.endswith(
            "cancel_all"
        ),  # —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞ —Ä–∞–±–æ—Ç–∞–ª–∞, –∞ —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–ª select/deselect
        state=AddUserDirectionState.selecting_keywords,
    )

    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
    dp.register_callback_query_handler(
        select_keyword,
        lambda call: call.data.startswith("profile_add_keyword_"),
        state=AddUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        confirm_add_direction,
        lambda call: call.data == "profile_keywords_page_confirm",
        state=AddUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        add_direction_confirm,
        lambda call: call.data.startswith("profile_confirm_add_direction_"),
        state=AddUserDirectionState.waiting_for_confirmation,
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ ---
    # –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    dp.register_callback_query_handler(
        select_all_keywords,
        lambda c: c.data.endswith("select_all"),
        state=AddUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        deselect_all_keywords,
        lambda c: c.data.endswith("cancel_all"),
        state=AddUserDirectionState.selecting_keywords,
    )

    # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    dp.register_callback_query_handler(
        select_all_keywords,
        lambda c: c.data.endswith("select_all"),
        state=EditUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        deselect_all_keywords,
        lambda c: c.data.endswith("cancel_all"),
        state=EditUserDirectionState.selecting_keywords,
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π ---
    dp.register_callback_query_handler(
        show_direction_details,
        lambda call: call.data.startswith("profile_directions_")
        and not call.data.startswith("profile_directions_back"),
    )
    dp.register_callback_query_handler(
        edit_direction,
        lambda call: call.data.startswith("profile_edit_direction_")
        and not call.data.startswith("profile_edit_direction_name_")
        and not call.data.startswith("profile_edit_direction_keywords_"),
        state="*",  # —á—Ç–æ–±—ã –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–∞–ª
    )
    dp.register_callback_query_handler(
        edit_direction_keywords_start,
        lambda call: call.data.startswith("profile_edit_direction_keywords_"),
        state="*",
    )
    dp.register_callback_query_handler(
        edit_direction_keywords,
        lambda call: call.data.startswith("profile_keywords_edit_")
        and not call.data.startswith("profile_keywords_edit_page_"),
        state=EditUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        confirm_edit_direction_keywords,
        lambda call: call.data == "profile_keywords_edit_page_confirm",
        state=EditUserDirectionState.selecting_keywords,
    )
    dp.register_callback_query_handler(
        edit_direction_confirm,
        lambda call: call.data.startswith("profile_confirm_edit_direction_keywords_"),
        state=EditUserDirectionState.waiting_for_confirmation,
    )

    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    dp.register_callback_query_handler(
        edit_select_keyword,
        lambda call: call.data.startswith("profile_edit_keyword_"),
        state=EditUserDirectionState.selecting_keywords,
    )

    # –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    dp.register_callback_query_handler(
        paginate_edit_keywords,
        lambda call: call.data.startswith("profile_keywords_edit_page_")
        and not call.data == "profile_keywords_edit_page_confirm",
        state=EditUserDirectionState.selecting_keywords,
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π ---
    dp.register_callback_query_handler(
        confirm_delete_direction,
        lambda call: call.data.startswith("profile_confirm_delete_direction_"),
    )
    dp.register_callback_query_handler(
        cancel_delete_direction,
        lambda call: call.data.startswith("profile_cancel_delete_direction_"),
        state=DeleteUserDirectionState.waiting_for_confirmation,
    )
    dp.register_callback_query_handler(
        delete_direction,
        lambda call: call.data.startswith("profile_confirm_delete_direction_"),
        state=DeleteUserDirectionState.waiting_for_confirmation,
    )

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ ---
    dp.register_callback_query_handler(
        go_back_to_profile_menu, text="profile_back", state="*"
    )
    dp.register_callback_query_handler(
        paginate_directions, text="profile_directions_back", state="*"
    )

    # --- –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é ---
    dp.register_callback_query_handler(close_menu, text="close", state="*")
